name: Deploy

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          args: --timeout=30m --config=golangci.prod.yaml
          version: v1.54
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
      - name: Install dependencies
        run: go mod download
      - name: Run tests
        run: make test
  build:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
#    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build main
        run: docker build -t b0pof/bizon-main -f ./build/main.Dockerfile .
      - name: Push the image
        run: docker push b0pof/bizon-main
      - name: Build auth
        run: docker build -t b0pof/bizon-auth -f ./build/auth.Dockerfile .
      - name: Push the image
        run: docker push b0pof/bizon-auth
      - name: Build profile
        run: docker build -t b0pof/bizon-profile -f ./build/profile.Dockerfile .
      - name: Push the image
        run: docker push b0pof/bizon-profile
      - name: Build CSAT
        run: docker build -t b0pof/bizon-csat -f ./build/csat.Dockerfile .
      - name: Push the image
        run: docker push b0pof/bizon-csat
  deploy:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Pull the image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.HOST }}
          username: ${{ vars.USER }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd ~/ozon_project/backend/
            docker compose down
            git checkout develop && git pull
            docker compose pull
            docker compose up --force-recreate --build -d
            docker image prune -f
